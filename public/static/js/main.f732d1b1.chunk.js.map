{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/showSwalError.js","actions/auth.js","components/auth/LoginScreen.jsx","helpers/idLoginFormValid.js","helpers/isRegisterFormValid.js","actions/eventsCalendar.action.js","actions/ui.action.js","components/ui/AddNewEventFab.jsx","components/calendar/CalendarEvent.jsx","helpers/center-modal-styles.js","components/calendar/CalendarModal.jsx","components/ui/Navbar.jsx","helpers/calendar-messages-es.js","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","routers/PublicRoute.jsx","routers/PrivateRoute.jsx","routers/AppRouter.jsx","CalendarApp.jsx","index.js"],"names":["types","initialState","checking","events","id","Date","getTime","title","start","moment","toDate","end","add","bgcolor","notes","user","_id","name","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handeInputChange","target","value","baseUrl","process","fetchWithoutToken","enpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","showSwalError","text","Swal","fire","icon","showCloseButton","showCancelButton","focusConfirm","checkingFinish","login","logout","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","validator","isEmail","length","console","log","a","resp","json","ok","setItem","uid","msg","startLogin","required","onChange","placeholder","password2","trim","startRegister","eventSetActive","Event","eventClearActiveEvent","uiOpenModal","uiCloseModal","AddNewFab","onClick","CalendarEvent","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","startDate","minutes","seconds","endDate2","clone","initEvent","CalendarModal","useSelector","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","eventUpdated","amPmAriaLabel","minDate","autoComplete","minLength","rows","Navbar","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","onView","selectable","view","components","AddNewEventFab","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"wOAEaA,EAEE,kBAFFA,EAGG,mBAHHA,EAKK,qBALLA,EAME,kBANFA,EAOY,6BAPZA,EAQG,wBARHA,EASG,wBATHA,EAWS,qCAXTA,EAaA,eAbAA,EAgBC,gBCfRC,EAAe,CACnBC,UAAU,G,yBCAND,EAAe,CAEnBE,OAAQ,CAAC,CACPC,IAAI,IAAIC,MAAOC,UACfC,MAAO,yBACPC,MAAOC,MAASC,SAChBC,IAAKF,MAASG,IAAK,EAAG,SAAUF,SAChCG,QAAS,UACTC,MAAO,oBACPC,KAAM,CACJC,IAAK,MACLC,KAAM,eAGVC,YAAa,MChBTjB,EAAe,CACnBkB,WAAW,GCIAC,EAAcC,YAAgB,CACzCC,GDDuB,WAAqC,IAAnCC,EAAkC,uDAA1BtB,EAAcuB,EAAY,uCAE3D,OAASA,EAAOC,MACd,KAAKzB,EACH,OAAO,2BACFuB,GADL,IAEEJ,WAAW,IAGf,KAAKnB,EACH,OAAO,2BACFuB,GADL,IAEEJ,WAAW,IAGf,QACE,OAAOI,ICdXG,SFa6B,WAAqC,IAAnCH,EAAkC,uDAA1BtB,EAAcuB,EAAY,uCAEjE,OAASA,EAAOC,MAEd,KAAKzB,EACH,OAAO,2BACFuB,GADL,IAEEpB,OAAO,GAAD,mBACDoB,EAAMpB,QADL,CAEJqB,EAAOG,YAIb,KAAK3B,EACH,OAAO,2BACFuB,GADL,IAEEL,YAAaM,EAAOG,UAGxB,KAAK3B,EACH,OAAO,2BACFuB,GADL,IAEEL,YAAa,OAGjB,KAAKlB,EACH,OAAO,2BACFuB,GADL,IAEEpB,OAAQoB,EAAMpB,OAAOyB,KACnB,SAAAC,GAAK,OAAMA,EAAMzB,KAAOoB,EAAOG,QAAQvB,GAAOoB,EAAOG,QAAUE,OAIrE,KAAK7B,EACH,OAAO,2BACFuB,GADL,IAEEpB,OAAQoB,EAAMpB,OAAO2B,QACnB,SAAAD,GAAK,OAAMA,EAAMzB,KAAOmB,EAAML,YAAYd,MAE5Cc,YAAa,OAGjB,QACE,OAAOK,IEvDXQ,KHDyB,WAAqC,IAAnCR,EAAkC,uDAA1BtB,EAAcuB,EAAY,uCAE7D,OAASA,EAAOC,MAEd,KAAKzB,EACH,OAAO,uCACFuB,GACAC,EAAOG,SAFZ,IAGEzB,UAAU,IAGd,KAAKF,EACH,OAAO,2BACFuB,GADL,IAEErB,UAAU,IAGd,KAAKF,EACH,MAAO,CACLE,UAAU,GAGd,QACE,OAAOqB,MI3BPS,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,EAAQC,YACnBjB,EACAY,EACEM,YAAiBC,O,gCCaNC,EArBC,WAA0B,IAAxBvC,EAAuB,uDAAR,GAAQ,EAETwC,mBAAUxC,GAFD,mBAE/ByC,EAF+B,KAEvBC,EAFuB,KAIjCC,EAAQ,WACZD,EAAW1C,IAGP4C,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE1BH,EAAU,2BACLD,GADI,kBAELI,EAAO7B,KAAQ6B,EAAOC,UAK5B,MAAO,CAAEL,EAAQG,EAAkBD,I,yBCnB/BI,EAAUC,oDAGVC,EAAoB,SAAEC,EAASC,GAA2B,IAArBC,EAAoB,uDAAX,MAE5CC,EAAG,UAAON,EAAP,YAAoBG,GAE7B,MAAgB,QAAXE,EACIE,MAAOD,GAEPC,MAAOD,EAAK,CACjBD,SACAG,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAWP,MAKtBQ,EAAiB,SAAET,EAASC,GAA2B,IAArBC,EAAoB,uDAAX,MAEzCC,EAAG,UAAON,EAAP,YAAoBG,GACvBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAgB,QAAXV,EACIE,MAAOD,EAAK,CACjBD,SACAG,QAAS,CACP,UAAWK,KAIRN,MAAOD,EAAK,CACjBD,SACAG,QAAS,CACP,eAAgB,mBAChB,UAAWK,GAEbJ,KAAMC,KAAKC,UAAWP,M,iBCpCfY,EAAgB,SAAEC,GAE7BC,IAAKC,KAAK,CACRC,KAAM,QACN7D,MAAO,QACP0D,OACAI,iBAAiB,EACjBC,kBAAkB,EAClBC,cAAc,KCyDZC,EAAiB,iBAAO,CAC5B/C,KAAMzB,IAGFyE,EAAQ,SAAE1D,GAAF,MAAa,CACzBU,KAAMzB,EACN2B,QAASZ,IAWL2D,EAAS,iBAAO,CACpBjD,KAAMzB,I,iBCwDO2E,G,OApIK,WAElB,IAAMC,EAAWC,cAFO,EAI4BrC,EAAQ,CAC1DsC,OAAQ,wBACRC,UAAW,WANW,mBAIhBC,EAJgB,KAICC,EAJD,KAShBH,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UATQ,EAkBkCvC,EAAQ,CAChE0C,MAAO,mBACPC,OAAQ,8BACRC,WAAY,SACZC,WAAY,WAtBU,mBAkBhBC,EAlBgB,KAkBIC,EAlBJ,KA0BhBL,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WASnC,OACE,qBAAKG,UAAU,4BAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,yCACA,uBAAMC,SA7BM,SAAEC,GCnBQ,IAAEC,EAAOC,EDoBrCF,EAAEG,iBCpB4BF,EDsBZb,ECtBmBc,EDsBXb,GCpBtBe,IAAUC,QAAQJ,KAIZC,EAASI,OAAS,IAF5BC,QAAQC,IAAI,sBACL,KDkBLtB,EDpBoB,SAAEe,EAAOC,GACjC,8CAAO,WAAOhB,GAAP,iBAAAuB,EAAA,sEAEcjD,EAAmB,OAAQ,CAAEyC,QAAOC,YAAY,QAF9D,cAECQ,EAFD,gBAGcA,EAAKC,OAHnB,QAGC5C,EAHD,QAKI6C,IACPxC,aAAayC,QAAS,QAAS9C,EAAKI,OACpCC,aAAayC,QAAS,mBAAmB,IAAIlG,MAAOC,WAEpDsE,EAAUH,EAAM,CACd+B,IAAK/C,EAAK+C,IACVvF,KAAMwC,EAAKxC,SAIb+C,EAAeP,EAAKgD,KAfjB,2CAAP,sDCmBcC,CAAY5B,EAAQC,KAyB1B,UACE,qBAAKS,UAAU,OAAf,SACE,uBACEA,UAAU,eACVvE,KAAK,SACL0F,UAAQ,EACRC,SAAW3B,EACX4B,YAAY,SACZpF,KAAK,QACLsB,MAAQ+B,MAGZ,qBAAKU,UAAU,OAAf,SACE,uBACEA,UAAU,eACVvE,KAAK,YACL0F,UAAQ,EACRC,SAAW3B,EACX4B,YAAY,gBACZpF,KAAK,WACLsB,MAAQgC,MAGZ,qBAAKS,UAAU,OAAf,SACE,uBACE/D,KAAK,SACL+D,UAAU,YACVzC,MAAM,kBAMd,sBAAKyC,UAAU,wBAAf,UACE,0CACA,uBAAMC,SA/CQ,SAAEC,GEnCS,IAAQC,EAAOC,EAAUkB,EFoCxDpB,EAAEG,iBEpCqCF,EFsCXR,EEtCkBS,EFsCVR,EEtCoB0B,EFsCRzB,GEpCtB,IFoCLH,EEpCb6B,OAAOf,QAEfhC,EAAe,oBACR,GACI8B,IAAUC,QAAQJ,KAInBC,IAAakB,GAAalB,EAASI,OAAS,KAEtDhC,EAAe,iEACR,IALPA,EAAe,sBACR,KF8BLY,EDhBuB,SAAE3D,EAAM0E,EAAOC,GAC1C,8CAAO,WAAOhB,GAAP,iBAAAuB,EAAA,sEAEcjD,EAAmB,WAAY,CAAEjC,OAAM0E,QAAOC,YAAY,QAFxE,cAECQ,EAFD,gBAGcA,EAAKC,OAHnB,QAGC5C,EAHD,QAKI6C,IACPxC,aAAayC,QAAS,QAAS9C,EAAKI,OACpCC,aAAayC,QAAS,mBAAmB,IAAIlG,MAAOC,WAEpDsE,EAAUH,EAAM,CACd+B,IAAK/C,EAAK+C,IACVvF,KAAMwC,EAAKxC,SAIb+C,EAAeP,EAAKgD,KAfjB,2CAAP,sDCecO,CAAe9B,EAAOC,EAAQC,KA2CpC,UACE,qBAAKI,UAAU,OAAf,SACE,uBACE/D,KAAK,OACL+D,UAAU,eACVqB,YAAY,SACZ5F,KAAK,QACL2F,SAAWrB,EACXxC,MAAQmC,MAGZ,qBAAKM,UAAU,OAAf,SACE,uBACE/D,KAAK,QACL+D,UAAU,eACVqB,YAAY,SACZ5F,KAAK,SACL2F,SAAWrB,EACXxC,MAAQoC,MAGZ,qBAAKK,UAAU,OAAf,SACE,uBACE/D,KAAK,WACL+D,UAAU,eACVqB,YAAY,gBACZ5F,KAAK,aACL2F,SAAWrB,EACXxC,MAAQqC,MAIZ,qBAAKI,UAAU,OAAf,SACE,uBACE/D,KAAK,WACL+D,UAAU,eACVqB,YAAY,0BACZ5F,KAAK,aACL2F,SAAWrB,EACXxC,MAAQsC,MAIZ,qBAAKG,UAAU,OAAf,SACE,uBACE/D,KAAK,SACL+D,UAAU,YACVzC,MAAM,gC,QG3HTkE,EAAiB,SAAEC,GAAF,MAAc,CAC1CzF,KAAMzB,EACN2B,QAASuF,IAIEC,EAAwB,iBAAO,CAC1C1F,KAAMzB,ICdKoH,EAAc,iBAAO,CAChC3F,KAAMzB,IAGKqH,GAAe,iBAAO,CACjC5F,KAAMzB,ICiBOsH,GAnBG,WAEhB,IAAM1C,EAAWC,cAOjB,OACE,wBACEW,UAAU,sBACV+B,QARkB,WACpB3C,EAAUuC,KACVvC,EAAUwC,MAIV,SAIE,mBAAG5B,UAAU,mBCLJgC,GAZO,SAAC,GAAe,IAAb3F,EAAY,EAAZA,MAEdtB,EAAgBsB,EAAhBtB,MAAOQ,EAASc,EAATd,KAEhB,OACE,gCACE,iCAAUR,IACV,uCAAWQ,EAAKE,Y,wCCTTwG,GAAe,CAC1BC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0B,OCSfC,KAAMC,cAAc,SAEpB,IAAMC,GAAY1H,MAAS2H,QAAQ,GAAGC,QAAQ,GAAGzH,IAAI,EAAG,SAElD0H,GAAWH,GAAUI,QAAQ3H,IAAI,EAAG,SAEpC4H,GAAY,CAChBjI,MAAO,oBACPO,MAAO,GACPN,MAAO2H,GAAUzH,SACjBC,IAAK2H,GAAS5H,UAsLD+H,GAnLO,WAEpB,IAAM7D,EAAWC,cAET1D,EAAcuH,aAAa,SAAAnH,GAAK,OAAIA,EAAMD,MAA1CH,UACAD,EAAgBwH,aAAa,SAAAnH,GAAK,OAAIA,EAAMG,YAA5CR,YALkB,EASYuB,oBAAU,GATtB,mBASlBkG,EATkB,KASNC,EATM,OAgBYnG,mBAAU+F,IAhBtB,mBAgBlBK,EAhBkB,KAgBNC,EAhBM,KAiBlBvI,EAA6BsI,EAA7BtI,MAAOO,EAAsB+H,EAAtB/H,MAAON,EAAeqI,EAAfrI,MAAOG,EAAQkI,EAARlI,IAE7BoI,qBAAU,WAEUD,EAAhB5H,GAA8DsH,MAE/D,CAAEtH,EAAa4H,IAElB,IAAME,EAAoB,SAAC,GAAgB,IAAdlG,EAAa,EAAbA,OAC3BgG,EAAc,2BACTD,GADQ,kBAET/F,EAAO7B,KAAQ6B,EAAOC,SAGxBxC,EAAMwG,OAAOf,OAAS,EAAM4C,GAAe,GAAUA,GAAe,IA+DxE,OACE,eAAC,KAAD,CACEK,OAAS9H,EAET+H,eAhDe,WAEjBtE,EAAUyC,MAEVzC,EAAUuC,KACV2B,EAAeN,KA4CbW,MAAQ1B,GACR2B,eAAiB,IACjB5D,UAAU,QACV6D,iBAAiB,cAPnB,UAUE,mCAASnI,EAAgB,gBAAkB,eAA3C,OACA,uBACA,uBACEsE,UAAU,YACVC,SAnDmB,SAAEC,GACzBA,EAAEG,iBAEF,ILvFyBqB,EKuFnBoC,EAAc7I,IAAQD,GACtB+I,EAAY9I,IAAQE,GAE1B,GAAK2I,EAAYE,cAAeD,GAC9B,OAAOrF,IAAKC,KAAK,CACf5D,MAAO,QACP0D,KAAM,sDACNG,KAAM,UAIJlD,GAYJ0D,EL9FsB,SAAEsC,GAAF,MAAc,CACxCzF,KAAMzB,EACN2B,QAASuF,GK4FKuC,CAAcZ,IACxBjE,EAAUuC,MAZVvC,GLnGuBsC,EKoGT,2BACP2B,GADM,IAETzI,IAAI,IAAIC,MAAOC,UACfS,KAAM,CACJC,IAAK,QACLC,KAAM,eLzGuB,CACvCQ,KAAMzB,EACN2B,QAASuF,KKkHLyB,GAAgB/D,EAAUyC,OAiB1B,UAKE,sBAAK7B,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,iCACA,cAAC,KAAD,CACEkE,cAAc,eACdlE,UAAU,eACVoB,SAnFoB,SAAElB,GAE9BoD,EAAc,2BACTD,GADQ,IAEXrI,MAAOkF,MAgFD3C,MAAQvC,OAIZ,sBAAKgF,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,8BACA,cAAC,KAAD,CACEA,UAAU,eACVmE,QAAUnJ,EACVoG,SArFkB,SAAElB,GAE5BoD,EAAc,2BACTD,GADQ,IAEXlI,IAAK+E,MAkFC3C,MAAQpC,OAIZ,uBACA,sBAAK6E,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,4BACA,uBACEoE,aAAa,MACbpE,UAAS,uBAAoBmD,EAAa,WAAa,aAA9C,KACT1H,KAAK,QACL4I,UAAU,IACVjD,SAAWoC,EACXnC,YAAY,uBACZF,UAAQ,EACRlF,KAAK,OACLsB,MAAQxC,IAEV,qBAAKH,GAAG,YAAYoF,UAAU,uBAA9B,yCAGF,sBAAKA,UAAU,OAAf,UACE,0BACEA,UAAU,eACVvE,KAAK,QACL2F,SAAWoC,EACXnC,YAAY,QACZF,UAAQ,EACRmD,KAAK,IACLrI,KAAK,OACLsB,MAAQjC,IAEV,qBAAKV,GAAG,YAAYoF,UAAU,uBAA9B,yCAGF,qBAAKA,UAAU,eAAf,SACE,yBACE/D,KAAK,SACL+D,UAAU,0BAFZ,UAIE,mBAAGA,UAAU,gBACb,wDClKGuE,GA/BA,WAEb,IAAMnF,EAAWC,cACT5D,EAASyH,aAAa,SAAAnH,GAAK,OAAIA,EAAMQ,QAArCd,KAQR,OACE,qBAAKuE,UAAU,kCAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAMA,UAAU,uBAAhB,SACIvE,IAGJ,yBACEuE,UAAU,yBACV+B,QAfa,WACnB3C,GVmEK,SAAEA,GAEPd,aAAakG,QACbpF,EAAUF,SU1DN,UAIE,mBAAGc,UAAU,wBACb,sBAAMA,UAAU,OAAhB,4BC5BGyE,GAAW,CACtBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACN9I,MAAO,SACP+I,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCWFC,I,oBAnBQ,WAErB,IAAMnG,EAAWC,cAMjB,OACE,yBACEW,UAAU,4BACV+B,QAPiB,WACnB3C,ERc+B,CACjCnD,KAAMzB,KQXJ,UAIE,mBAAGwF,UAAU,iBACb,sBAAMA,UAAU,OAAhB,gCCGN/E,IAAOuK,OAAO,MACd,IAAMC,GAAYC,YAAgBzK,KAiFnB0K,GA/EQ,WAErB,IAAMvG,EAAWC,cAFU,EAIK6D,aAAY,SAAAnH,GAAK,OAAIA,EAAMG,YAAnDvB,EAJmB,EAInBA,OAAQe,EAJW,EAIXA,YAJW,EAMKuB,mBAAUqB,aAAaC,QAAS,aAAgB,SANrD,mBAMpBqH,EANoB,KAMVC,EANU,KA4C3B,OACE,sBAAK7F,UAAU,kBAAf,UACE,cAAC,GAAD,IAEA,cAAC,IAAD,CACEyF,UAAYA,GACZ9K,OAASA,EACTmL,cAAc,QACdC,YAAY,MACZtB,SAAWA,GACXuB,gBAxBmB,SAAE3J,EAAOrB,EAAOG,EAAK8K,GAS5C,MAAO,CACLtC,MATY,CACZuC,gBAAiB,UACjBC,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAmBLC,mBA/Ce,SAACrG,GAEpBd,EAAUqC,EAAevB,IACzBd,EAAUwC,MA6CN4E,cAzCgB,SAACtG,GACrBd,EAAUqC,EAAevB,KAyCrBuG,aAhCe,SAACvG,GAEpBd,EAAUqC,EAAe,QA+BrBiF,OAtCe,SAACxG,GACpB2F,EAAY3F,GACZ5B,aAAayC,QAAS,WAAYb,IAqC9ByG,YAAe,EACfC,KAAOhB,EACPiB,WAAY,CACVxK,MAAO2F,MAKX,cAAC8E,GAAD,IAGIpL,GAAiB,cAAC,GAAD,IAIrB,cAAC,GAAD,Q,SCvESqL,GAvBK,SAAC,GAId,IAHLC,EAGI,EAHJA,gBACWC,EAEP,EAFJC,UACGC,EACC,gDACJ,OACE,cAAC,IAAD,2BAAYA,GAAZ,IACED,UAAY,SAAEE,GAAF,OACRJ,EACI,cAAC,IAAD,CAAUK,GAAG,MACb,cAACJ,EAAD,eAAgBG,SCcfE,GAxBM,SAAC,GAIf,IAHLN,EAGI,EAHJA,gBACWC,EAEP,EAFJC,UACGC,EACC,gDAEJ,OACE,cAAC,IAAD,2BAAYA,GAAZ,IACED,UAAY,SAAEE,GAAF,OACRJ,EACI,cAACC,EAAD,eAAgBG,IAChB,cAAC,IAAD,CAAUC,GAAG,gBCuCZE,GAxCG,WAEhB,IAAMnI,EAAWC,cAFK,EAGI6D,aAAa,SAAAnH,GAAK,OAAIA,EAAMQ,QAA9C7B,EAHc,EAGdA,SAAUsG,EAHI,EAGJA,IAQlB,OANAuC,qBAAU,WAERnE,EhB0BF,uCAAO,WAAOA,GAAP,iBAAAuB,EAAA,sEAEcvC,EAAgB,cAF9B,cAECwC,EAFD,gBAGcA,EAAKC,OAHnB,QAGC5C,EAHD,QAKI6C,IACPxC,aAAayC,QAAS,QAAS9C,EAAKI,OACpCC,aAAayC,QAAS,mBAAmB,IAAIlG,MAAOC,WAEpDsE,EAAUH,EAAM,CACd+B,IAAK/C,EAAK+C,IACVvF,KAAMwC,EAAKxC,SAIb2D,EAAUJ,KAfP,2CAAP,yDgBxBG,CAAEI,IAEA1E,EACK,2CAIR,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,GAAD,CACE8M,OAAK,EACLC,KAAK,SACLP,UAAY/H,EACZ6H,kBAAoBhG,IAGtB,cAAC,GAAD,CACEwG,OAAK,EACLC,KAAK,IACLP,UAAYvB,GACZqB,kBAAoBhG,IAGtB,cAAC,IAAD,CAAUqG,GAAG,cCjCRK,GARK,WAClB,OACE,cAAC,IAAD,CAAU9K,MAAQA,EAAlB,SACE,cAAC,GAAD,OCHN+K,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.f732d1b1.chunk.js","sourcesContent":["\n\nexport const types = {\n\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n\n  eventSetActive: '[event] Set Active', \n  eventAddNew: '[event] Add new',\n  eventClearActiveEvent: '[event] Clear active event',\n  eventUpdated: '[event] Event updated',\n  eventDeleted: '[event] Event deleted',\n\n  authCheckingFinish: '[auth] Finish checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start register',\n  authStartTokenRenew: '[auth] Start token renew',\n  authLogout: '[auth] Logout',\n\n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n  switch ( action.type ) {\n\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false\n      }\n\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false\n      }\n\n    case types.authLogout:\n      return {\n        checking: false\n      }\n\n    default:\n      return state;\n  }\n\n}","import moment from 'moment';\n\nimport { types } from '../types/types';\n\nconst initialState = {\n\n  events: [{\n    id: new Date().getTime(),\n    title: 'Cumpleaños del jefe',\n    start: moment().toDate(),\n    end: moment().add( 2, 'hours' ).toDate(),\n    bgcolor: '#fafafa',\n    notes: 'Comprar el pastel',\n    user: {\n      _id: '123',\n      name: 'Alejandro'\n    }\n  }],\n  activeEvent: null\n\n};\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n  switch ( action.type ) { \n\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [\n          ...state.events,\n          action.payload\n        ]\n      }\n\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload\n      }\n\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null\n      }\n\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map(\n          event => ( event.id === action.payload.id ) ? action.payload : event\n        )\n      }\n\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter(\n          event => ( event.id !== state.activeEvent.id )\n        ),\n        activeEvent: null\n      }\n  \n    default:\n      return state;\n  }\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n  modalOpen: false,\n\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n  \n  switch ( action.type ) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true\n      }\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false\n      }\n  \n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\n\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer\n  // TODO CalendarReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware( thunk )\n  )\n);","import { useState } from \"react\"\n\nconst useForm = ( initialState = {} ) => {\n\n  const [ values, setValues ] = useState( initialState );\n\n  const reset = () => {\n    setValues( initialState );\n  }\n\n  const handeInputChange = ({ target }) => {\n\n    setValues({\n      ...values,\n      [ target.name ]: target.value,\n      \n    });\n  };\n\n  return [ values, handeInputChange, reset ];\n\n};\n\nexport default useForm;","const baseUrl = process.env.REACT_APP_API_URL;\n\n\nconst fetchWithoutToken = ( enpoint, data, method = 'GET' ) => {\n\n  const url = `${ baseUrl }/${ enpoint }`;\n\n  if ( method === 'GET' ) {\n    return fetch( url );\n  } else {\n    return fetch( url, {\n      method,\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify( data )\n    });\n  }\n}\n\nconst fetchWithToken = ( enpoint, data, method = 'GET' ) => {\n\n  const url = `${ baseUrl }/${ enpoint }`;\n  const token = localStorage.getItem('token') || '';\n\n  if ( method === 'GET' ) {\n    return fetch( url, {\n      method,\n      headers: {\n        'x-token': token\n      }\n    } );\n  } else {\n    return fetch( url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token\n      },\n      body: JSON.stringify( data )\n    });\n  }\n}\n\nexport {\n  fetchWithoutToken,\n  fetchWithToken\n}","import Swal from \"sweetalert2\";\n\n\nexport const showSwalError = ( text ) => {\n\n  Swal.fire({\n    icon: 'error',\n    title: 'Error',\n    text,\n    showCloseButton: true,\n    showCancelButton: false,\n    focusConfirm: false,\n  });\n  \n} \n  ","import { types } from \"../types/types\";\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\nimport { showSwalError } from \"../helpers/showSwalError\";\n\n\nexport const startLogin = ( email, password ) => {\n  return async( dispatch ) => {\n    \n    const resp = await fetchWithoutToken( 'auth', { email, password }, 'POST' );\n    const body = await resp.json();\n\n    if( body.ok ) {\n      localStorage.setItem( 'token', body.token );\n      localStorage.setItem( 'token-init.date', new Date().getTime() );\n\n      dispatch( login({\n        uid: body.uid,\n        name: body.name\n      }) );\n\n    } else {\n      showSwalError( body.msg );\n    }\n  }\n}\n\nexport const startRegister = ( name, email, password ) => {\n  return async( dispatch ) => {\n    \n    const resp = await fetchWithoutToken( 'auth/new', { name, email, password }, 'POST' );\n    const body = await resp.json();\n    \n    if( body.ok ) {\n      localStorage.setItem( 'token', body.token );\n      localStorage.setItem( 'token-init.date', new Date().getTime() );\n      \n      dispatch( login({\n        uid: body.uid,\n        name: body.name\n      }) );\n      \n    } else {\n      showSwalError( body.msg );\n    }\n  }\n}\n\nexport const startChecking = () => {\n  return async( dispatch ) => {\n\n    const resp = await fetchWithToken( 'auth/renew' );\n    const body = await resp.json();\n    \n    if( body.ok ) {\n      localStorage.setItem( 'token', body.token );\n      localStorage.setItem( 'token-init.date', new Date().getTime() );\n      \n      dispatch( login({\n        uid: body.uid,\n        name: body.name\n      }) );\n      \n    } else {\n      dispatch( checkingFinish() );\n    }\n  }\n}\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish\n});\n\nconst login = ( user ) => ({\n  type: types.authLogin,\n  payload: user\n});\n\nexport const startLogout = () => {\n  return ( dispatch ) => {\n\n    localStorage.clear();\n    dispatch( logout() );\n  }\n}\n\nconst logout = () => ({\n  type: types.authLogout\n});","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport useForm from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { isLoginFormValid } from '../../helpers/idLoginFormValid';\nimport { isRegisterFormValid } from '../../helpers/isRegisterFormValid';\n\nimport './login.css'\n\nconst LoginScreen = () => {\n\n  const dispatch = useDispatch();\n\n  const [ formLoginValues, handleLoginInputChange ] = useForm({\n    lEmail: 'alejandro@outlook.com',\n    lPassword: '123456'\n  });\n\n  const { lEmail, lPassword } = formLoginValues;\n\n  const handleLogin = ( e ) => {\n    e.preventDefault();\n\n    isLoginFormValid( lEmail, lPassword ) && \n      dispatch( startLogin( lEmail, lPassword ) );\n  }\n\n  const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n    rName: 'Hector Alejandro',\n    rEmail: 'hectoralejandro@outlook.com',\n    rPassword1: '123456',\n    rPassword2: '123456',\n    \n  });\n\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n  const handleRgister = ( e ) => {\n    e.preventDefault();\n\n    isRegisterFormValid( rName, rEmail, rPassword1, rPassword2 ) && \n      dispatch( startRegister( rName, rEmail, rPassword1 ) );\n  }\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={ handleLogin }>\n            <div className=\"mb-3\">\n              <input\n                className=\"form-control\"\n                name=\"lEmail\"\n                required\n                onChange={ handleLoginInputChange }\n                placeholder=\"Correo\"\n                type=\"email\"\n                value={ lEmail }\n              />\n            </div>\n            <div className=\"mb-3\">\n              <input\n                className=\"form-control\"\n                name=\"lPassword\"\n                required\n                onChange={ handleLoginInputChange }\n                placeholder=\"Contraseña\"\n                type=\"password\"\n                value={ lPassword }\n              />\n            </div>\n            <div className=\"mb-3\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Login\"\n              />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={ handleRgister }>\n            <div className=\"mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                onChange={ handleRegisterInputChange }\n                value={ rName }\n              />\n            </div>\n            <div className=\"mb-3\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                onChange={ handleRegisterInputChange }\n                value={ rEmail }\n              />\n            </div>\n            <div className=\"mb-3\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword1\"\n                onChange={ handleRegisterInputChange }\n                value={ rPassword1 }\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                name=\"rPassword2\"\n                onChange={ handleRegisterInputChange }\n                value={ rPassword2 }\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <input\n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Crear cuenta\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreen","import validator from 'validator';\n\nexport const isLoginFormValid = ( email, password ) => {\n    \n  if ( !validator.isEmail(email) ) {\n    // dispatch( setError( 'Email is not valid' ) );\n    console.log('Email is not valid');\n    return false;\n  } else if ( password.length < 5 ) {\n    // dispatch( setError( 'Password should be at least 6 characters and match each other' ) );\n    return false;\n  }\n\n  return true;\n}","import validator from 'validator';\nimport { showSwalError } from './showSwalError';\n\nexport const isRegisterFormValid = ( name, email, password, password2 ) => {\n    \n  if ( name.trim().length === 0 ) {\n    // dispatch( setError( 'Name is required' ) );\n    showSwalError( 'Name is required' );\n    return false;\n  } else if ( !validator.isEmail(email) ) {\n    // dispatch( setError( 'Email is not valid' ) );\n    showSwalError( 'Email is not valid' );\n    return false;\n  } else if ( password !== password2 || password.length < 5 ) {\n    // dispatch( setError( 'Password should be at least 6 characters and match each other' ) );\n    showSwalError( 'Password should be at least 6 characters and match each other' );\n    return false;\n  }\n\n  return true;\n}","\nimport { types } from '../types/types';\n\nexport const eventAddNew = ( Event ) => ({\n  type: types.eventAddNew,\n  payload: Event\n  \n});\n\nexport const eventSetActive = ( Event ) => ({\n  type: types.eventSetActive,\n  payload: Event\n  \n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent\n});\n\nexport const eventUpdated = ( Event ) => ({\n  type: types.eventUpdated,\n  payload: Event\n});\n\nexport const eventDeleted = () => ({\n  type: types.eventDeleted\n});","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal\n});","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventClearActiveEvent } from '../../actions/eventsCalendar.action';\nimport { uiOpenModal } from '../../actions/ui.action';\n\nconst AddNewFab = () => {\n\n  const dispatch = useDispatch();\n\n  const handleOnClick = () => {\n    dispatch( eventClearActiveEvent() );\n    dispatch( uiOpenModal() );\n  }\n\n  return (\n    <button\n      className=\"btn btn-primary fab\"\n      onClick={ handleOnClick }\n    >\n      <i className=\"fas fa-plus\"></i>\n    </button>\n  )\n}\n\nexport default AddNewFab\n","import React from 'react';\n\nconst CalendarEvent = ({ event }) => {\n\n  const  { title, user } = event;\n\n  return (\n    <div>\n      <strong>{ title }</strong>\n      <span> - { user.name }</span>\n    </div>\n  )\n}\n\nexport default CalendarEvent\n","export const customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport moment from 'moment'\nimport DateTimePicker from 'react-datetime-picker';\nimport Modal from 'react-modal';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui.action';\nimport { customStyles } from '../../helpers/center-modal-styles';\n\nimport './calendar.css';\nimport { eventAddNew, eventClearActiveEvent, eventUpdated } from '../../actions/eventsCalendar.action';\n\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root')\n\nconst startDate = moment().minutes(0).seconds(0).add(1, 'hours');\n// const endDate = moment().minutes(0).seconds(0).add(2, 'hours');\nconst endDate2 = startDate.clone().add(1, 'hours');\n\nconst initEvent = {\n  title: 'Titulo del evento',\n  notes: '',\n  start: startDate.toDate(),\n  end: endDate2.toDate()\n}\n\nconst CalendarModal = () => {\n\n  const dispatch = useDispatch();\n\n  const { modalOpen } = useSelector( state => state.ui );\n  const { activeEvent } = useSelector( state => state.calendar );\n  \n  // const [ startValueDate, setStartValueDate ] = useState( startDate.toDate() );\n  // const [ endValueDate, setEndtValueDate ] = useState( endDate2.toDate() );\n  const [ titleValid, setTitleValid ] = useState( true );\n\n  // El useState solo se utiliza cuando el estado se maneja en el mismo componente\n  // const [ modalIsOpen, setModalIsOpen ] = useState( modalOpen );\n  // Si queremos manejar el estado en todos los componentes se va a utilizar,\n  // redux, thunk\n\n  const [ formValues, setFormValues ] = useState( initEvent );\n  const { title, notes, start, end } = formValues;\n\n  useEffect(() => {\n\n    ( activeEvent ) ? setFormValues( activeEvent ) : setFormValues( initEvent );\n\n  }, [ activeEvent, setFormValues ])\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [ target.name ]: target.value\n    });\n\n    ( title.trim().length < 6 ) ? setTitleValid( false ) : setTitleValid( true );\n  }\n\n  const handleStartDateChange = ( e ) => {\n    // setStartValueDate( e );\n    setFormValues({\n      ...formValues,\n      start: e\n    });\n  }\n\n  const handleEndDateChange = ( e ) => {\n    // setEndtValueDate( e );\n    setFormValues({\n      ...formValues,\n      end: e\n    });\n  }\n\n  const closeModal = () => {\n    // TODO: Cerrar el modal\n    dispatch( uiCloseModal() );\n    // dispatch( eventSetActive(null) );\n    dispatch( eventClearActiveEvent() );\n    setFormValues( initEvent );\n  }\n\n  const handleSubmitForm = ( e ) => {\n    e.preventDefault();\n\n    const momentStart = moment( start );\n    const momentEnd = moment( end );\n\n    if ( momentStart.isSameOrAfter( momentEnd ) ) {\n      return Swal.fire({\n        title: 'Error',\n        text: 'La fecha fin debe de ser mayor a la fecha de inicio',\n        icon: 'error'\n      });\n    }\n\n    if ( !activeEvent ) {\n      dispatch(\n        eventAddNew({\n          ...formValues,\n          id: new Date().getTime(),\n          user: {\n            _id: '12345',\n            name: 'Alejandro'\n          }\n        })\n      );\n    } else {\n      dispatch( eventUpdated( formValues ) );\n      dispatch( eventClearActiveEvent() );\n    }\n\n\n    // TODO: realizar grabación \n    ( titleValid ) && dispatch( uiCloseModal() );\n    \n  }\n\n  return (\n    <Modal\n      isOpen={ modalOpen }\n      // onAfterOpen={afterOpenModal}\n      onRequestClose={ closeModal }\n      style={ customStyles }\n      closeTimeoutMS={ 200 }\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n\n      <h1> { ( activeEvent ) ? 'Editar evento' : 'Nuevo evento' } </h1>\n      <hr />\n      <form\n        className=\"container\"\n        onSubmit={ handleSubmitForm }\n      >\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Fecha y hora inicio</label>\n          <DateTimePicker\n            amPmAriaLabel=\"Select AM/PM\"\n            className=\"form-control\"\n            onChange={ handleStartDateChange }\n            value={ start }\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Fecha y hora fin</label>\n          <DateTimePicker\n            className=\"form-control\"\n            minDate={ start }\n            onChange={ handleEndDateChange }\n            value={ end }\n          />\n        </div>\n\n        <hr />\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Titulo y notas</label>\n          <input\n            autoComplete=\"off\"\n            className={ `form-control ${ titleValid ? 'is-valid' : 'is-invalid' } ` }\n            name=\"title\"\n            minLength=\"6\"\n            onChange={ handleInputChange }\n            placeholder=\"Título del evento\"\n            required\n            type=\"text\"\n            value={ title }\n          />\n          <div id=\"titleHelp\" className=\"form-text text-muted\">Una descripción corta</div>\n        </div>\n\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            name=\"notes\"\n            onChange={ handleInputChange }\n            placeholder=\"Notas\"\n            required\n            rows=\"5\"\n            type=\"text\"\n            value={ notes }\n          ></textarea>\n          <div id=\"notesHelp\" className=\"form-text text-muted\">Información adicional</div>\n        </div>\n\n        <div className=\"d-grid gap-2\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-outline-primary\"\n          >\n            <i className=\"far fa-save\"></i>\n            <span> Guardar</span>\n          </button>\n        </div>\n\n      </form>\n\n    </Modal>\n  )\n}\n\nexport default CalendarModal","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startLogout } from '../../actions/auth';\n\nconst Navbar = () => {\n\n  const dispatch = useDispatch();\n  const { name } = useSelector( state => state.auth );\n\n  const handleLogout = () => {\n    dispatch( startLogout() );\n  }\n\n\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <div className=\"container-fluid\">\n        <span className=\"navbar-brand mb-0 h1\">\n          { name }\n        </span>\n\n        <button\n          className=\"btn btn-outline-danger\"\n          onClick= { handleLogout }\n        >\n          <i className=\"fas fa-sign-out-alt\"></i>\n          <span className=\"ms-1\">Salir</span>\n        </button>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Navbar\n","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: total => `+ Ver más (${total})`\n};","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { eventDeleted } from '../../actions/eventsCalendar.action';\n\nconst DeleteEventFab = () => {\n\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch( eventDeleted() );\n  }\n\n  return (\n    <button\n      className=\"bnt btn-danger fab-danger\"\n      onClick={ handleDelete }\n    >\n      <i className=\"fas fa-trash\"></i>\n      <span className=\"ms-2\">Borrar evento</span>\n    </button>\n  )\n}\n\nexport default DeleteEventFab\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport AddNewEventFab from '../ui/AddNewEventFab';\nimport CalendarEvent from './CalendarEvent';\nimport CalendarModal from './CalendarModal';\nimport Navbar from '../ui/Navbar';\n\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { eventSetActive } from '../../actions/eventsCalendar.action';\nimport { uiOpenModal } from '../../actions/ui.action';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport '../../styles.css'\n\n\nimport 'moment/locale/es';\nimport DeleteEventFab from '../ui/DeleteEventFab';\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\nconst CalendarScreen = () => {\n\n  const dispatch = useDispatch();\n  \n  const { events, activeEvent } = useSelector(state => state.calendar);\n\n  const [lastView, setLastView] = useState( localStorage.getItem( 'lastView' ) || 'month' )\n\n  const onDoubleClik = (e) => {\n    // console.log(e);\n    dispatch( eventSetActive(e) );\n    dispatch( uiOpenModal() );\n    // console.log( 'abrir modal' );\n  }\n\n  const onSelectEvent = (e) => {\n    dispatch( eventSetActive(e) );\n    // dispatch( uiOpenModal() );\n  }\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem( 'lastView', e );\n  }\n\n  const onSelectSlot = (e) => {\n    // console.log(e);\n    dispatch( eventSetActive(null) );\n  }\n\n  const eventStyleGetter = ( event, start, end, isSelected ) => {\n    const style = {\n      backgroundColor: '#367CF7',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white'\n    }\n\n    return {\n      style\n    }\n  }\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n\n      <Calendar\n        localizer={ localizer }\n        events={ events }\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={ messages }\n        eventPropGetter= { eventStyleGetter }\n        onDoubleClickEvent={ onDoubleClik }\n        onSelectEvent={ onSelectEvent }\n        onSelectSlot={ onSelectSlot }\n        onView={ onViewChange }\n        selectable = { true }\n        view={ lastView }\n        components={{\n          event: CalendarEvent\n        }}\n        \n      />\n\n      <AddNewEventFab />\n\n      {\n        ( activeEvent ) && <DeleteEventFab />\n      }\n\n\n      <CalendarModal />\n    </div>\n  )\n}\n\nexport default CalendarScreen\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route { ...rest }\n      component={ ( props ) => (\n        ( isAuthenticated )\n          ? ( <Redirect to=\"/\" /> )\n          : ( <Component { ...props } /> )\n      )}\n\n    />\n  )\n}\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n\n}\n\nexport default PublicRoute\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n\n  return (\n    <Route { ...rest }\n      component={ ( props ) => (\n        ( isAuthenticated )\n          ? ( <Component { ...props } /> )\n          : ( <Redirect to=\"/login\" /> )\n      )}\n    \n    />\n  )\n}\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n\n}\n\nexport default PrivateRoute\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport LoginScreen from '../components/auth/LoginScreen';\nimport CalendarScreen from '../components/calendar/CalendarScreen';\nimport PublicRoute from './PublicRoute';\nimport PrivateRoute from './PrivateRoute';\n\nimport { startChecking } from '../actions/auth';\n\nconst AppRouter = () => {\n\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector( state => state.auth );\n\n  useEffect(() => {\n\n    dispatch( startChecking() );\n    \n  }, [ dispatch ]);\n\n  if ( checking ) {\n    return (<h5>Espere...</h5>);\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={ LoginScreen }\n            isAuthenticated={ !!uid }\n          />\n\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={ CalendarScreen }\n            isAuthenticated={ !!uid }\n          />\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default AppRouter\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\n\nimport AppRouter from './routers/AppRouter';\n\nconst CalendarApp = () => {\n  return (\n    <Provider store={ store }>\n      <AppRouter />\n    </Provider>\n  )\n}\n\nexport default CalendarApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CalendarApp from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}